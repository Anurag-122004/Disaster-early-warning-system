{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91639\\\\disaster system\\\\disaster-frontend\\\\src\\\\components\\\\RealTimeUpdates.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeUpdates = () => {\n  _s();\n  const [disasters, setDisasters] = useState({});\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:5000');\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Validate data structure\n        if (data.type && data.location && data.severity) {\n          setDisasters(prevDisasters => ({\n            ...prevDisasters,\n            [data.location]: data\n          }));\n        } else {\n          console.error('Invalid data format:', data);\n        }\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n        console.log('Raw data:', event.data);\n      }\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => {\n      if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\n        socket.close();\n      }\n    };\n  }, []);\n  const disasterList = Object.values(disasters); // Convert object to an array for rendering\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Real-Time Disaster Updates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: disasterList.map((disaster, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [disaster.type, \" - \", disaster.location, \" - Severity: \", disaster.severity]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimeUpdates, \"SPjlIFCLNVBHvQbyaTeAfoE4Inw=\");\n_c = RealTimeUpdates;\nexport default RealTimeUpdates;\nvar _c;\n$RefreshReg$(_c, \"RealTimeUpdates\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RealTimeUpdates","_s","disasters","setDisasters","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","location","severity","prevDisasters","error","onclose","onerror","readyState","OPEN","CONNECTING","close","disasterList","Object","values","children","fileName","_jsxFileName","lineNumber","columnNumber","map","disaster","index","_c","$RefreshReg$"],"sources":["C:/Users/91639/disaster system/disaster-frontend/src/components/RealTimeUpdates.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RealTimeUpdates = () => {\r\n    const [disasters, setDisasters] = useState({}); \r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket('ws://localhost:5000');\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket connection established');\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n            try {\r\n                const data = JSON.parse(event.data);\r\n\r\n                // Validate data structure\r\n                if (data.type && data.location && data.severity) {\r\n                    setDisasters((prevDisasters) => ({\r\n                        ...prevDisasters,\r\n                        [data.location]: data, \r\n                    }));\r\n                } else {\r\n                    console.error('Invalid data format:', data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error parsing WebSocket message:', error);\r\n                console.log('Raw data:', event.data);\r\n            }\r\n        };\r\n\r\n        socket.onclose = () => {\r\n            console.log('WebSocket connection closed');\r\n        };\r\n\r\n        socket.onerror = (error) => {\r\n            console.error('WebSocket error:', error);\r\n        };\r\n\r\n       \r\n        return () => {\r\n            if (socket.readyState === WebSocket.OPEN || socket.readyState === WebSocket.CONNECTING) {\r\n                socket.close();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const disasterList = Object.values(disasters); // Convert object to an array for rendering\r\n\r\n    return (\r\n        <div>\r\n            <h2>Real-Time Disaster Updates</h2>\r\n            <ul>\r\n                {disasterList.map((disaster, index) => (\r\n                    <li key={index}>\r\n                        {disaster.type} - {disaster.location} - Severity: {disaster.severity}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RealTimeUpdates;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMO,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACnD,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC1B,IAAI;QACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;;QAEnC;QACA,IAAIA,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACK,QAAQ,EAAE;UAC7Cb,YAAY,CAAEc,aAAa,KAAM;YAC7B,GAAGA,aAAa;YAChB,CAACN,IAAI,CAACI,QAAQ,GAAGJ;UACrB,CAAC,CAAC,CAAC;QACP,CAAC,MAAM;UACHJ,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEP,IAAI,CAAC;QAC/C;MACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDX,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEE,KAAK,CAACC,IAAI,CAAC;MACxC;IACJ,CAAC;IAEDP,MAAM,CAACe,OAAO,GAAG,MAAM;MACnBZ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IAEDJ,MAAM,CAACgB,OAAO,GAAIF,KAAK,IAAK;MACxBX,OAAO,CAACW,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC5C,CAAC;IAGD,OAAO,MAAM;MACT,IAAId,MAAM,CAACiB,UAAU,KAAKhB,SAAS,CAACiB,IAAI,IAAIlB,MAAM,CAACiB,UAAU,KAAKhB,SAAS,CAACkB,UAAU,EAAE;QACpFnB,MAAM,CAACoB,KAAK,CAAC,CAAC;MAClB;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACzB,SAAS,CAAC,CAAC,CAAC;;EAE/C,oBACIH,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCjC,OAAA;MAAA6B,QAAA,EACKH,YAAY,CAACQ,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9BpC,OAAA;QAAA6B,QAAA,GACKM,QAAQ,CAACpB,IAAI,EAAC,KAAG,EAACoB,QAAQ,CAACnB,QAAQ,EAAC,eAAa,EAACmB,QAAQ,CAAClB,QAAQ;MAAA,GAD/DmB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA3DID,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AA6DrB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}