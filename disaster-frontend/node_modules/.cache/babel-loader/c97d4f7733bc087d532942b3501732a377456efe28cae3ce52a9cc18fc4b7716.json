{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91639\\\\disaster system\\\\disaster-frontend\\\\src\\\\components\\\\RealTimeUpdates.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeUpdates = () => {\n  _s();\n  // eslint-disable-next-line\n  const [disasters, setDisasters] = useState({});\n  const [uniqueUpdates, setUniqueUpdates] = useState(new Set());\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:5000');\n    socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    socket.onmessage = event => {\n      try {\n        let data;\n\n        // Check if the message is valid JSON\n        try {\n          data = JSON.parse(event.data);\n        } catch (error) {\n          console.warn('Non-JSON message received:', event.data);\n          return; // Skip non-JSON messages\n        }\n\n        // Validate data structure\n        if (data.type && data.location && data.severity) {\n          const updateKey = `${data.type}-${data.location}-${data.severity}`;\n          if (!uniqueUpdates.has(updateKey)) {\n            setDisasters(prevDisasters => ({\n              ...prevDisasters,\n              [data.location]: data\n            }));\n\n            // Show toast notification\n            toast.info(`New update: ${data.type} in ${data.location} with severity ${data.severity}`);\n\n            // Add the update to the set of unique updates\n            setUniqueUpdates(prevUpdates => new Set(prevUpdates).add(updateKey));\n          }\n        }\n      } catch (error) {\n        console.error('Error parsing WebSocket message:', error);\n      }\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    return () => {\n      socket.close();\n    };\n  }, [uniqueUpdates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(RealTimeUpdates, \"A74hZ0L0mQGD2LRMifhL9XBuC0E=\");\n_c = RealTimeUpdates;\nexport default RealTimeUpdates;\nvar _c;\n$RefreshReg$(_c, \"RealTimeUpdates\");","map":{"version":3,"names":["React","useState","useEffect","toast","ToastContainer","jsxDEV","_jsxDEV","RealTimeUpdates","_s","disasters","setDisasters","uniqueUpdates","setUniqueUpdates","Set","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","error","warn","type","location","severity","updateKey","has","prevDisasters","info","prevUpdates","add","onclose","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91639/disaster system/disaster-frontend/src/components/RealTimeUpdates.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst RealTimeUpdates = () => {\r\n    // eslint-disable-next-line\r\n    const [disasters, setDisasters] = useState({});\r\n    const [uniqueUpdates, setUniqueUpdates] = useState(new Set());\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket('ws://localhost:5000');\r\n\r\n        socket.onopen = () => {\r\n            console.log('WebSocket connection established');\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n            try {\r\n                let data;\r\n\r\n                // Check if the message is valid JSON\r\n                try {\r\n                    data = JSON.parse(event.data);\r\n                } catch (error) {\r\n                    console.warn('Non-JSON message received:', event.data);\r\n                    return; // Skip non-JSON messages\r\n                }\r\n\r\n                // Validate data structure\r\n                if (data.type && data.location && data.severity) {\r\n                    const updateKey = `${data.type}-${data.location}-${data.severity}`;\r\n\r\n                    if (!uniqueUpdates.has(updateKey)) {\r\n                        setDisasters((prevDisasters) => ({\r\n                            ...prevDisasters,\r\n                            [data.location]: data,\r\n                        }));\r\n\r\n                        // Show toast notification\r\n                        toast.info(`New update: ${data.type} in ${data.location} with severity ${data.severity}`);\r\n\r\n                        // Add the update to the set of unique updates\r\n                        setUniqueUpdates((prevUpdates) => new Set(prevUpdates).add(updateKey));\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error parsing WebSocket message:', error);\r\n            }\r\n        };\r\n\r\n        socket.onclose = () => {\r\n            console.log('WebSocket connection closed');\r\n        };\r\n\r\n        return () => {\r\n            socket.close();\r\n        };\r\n    }, [uniqueUpdates]);\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer />\r\n            {/* Render your real-time updates here */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RealTimeUpdates;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAIY,GAAG,CAAC,CAAC,CAAC;EAE7DX,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,MAAM,GAAG,MAAM;MAClBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACnD,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC1B,IAAI;QACA,IAAIC,IAAI;;QAER;QACA,IAAI;UACAA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;UACZP,OAAO,CAACQ,IAAI,CAAC,4BAA4B,EAAEL,KAAK,CAACC,IAAI,CAAC;UACtD,OAAO,CAAC;QACZ;;QAEA;QACA,IAAIA,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACM,QAAQ,IAAIN,IAAI,CAACO,QAAQ,EAAE;UAC7C,MAAMC,SAAS,GAAG,GAAGR,IAAI,CAACK,IAAI,IAAIL,IAAI,CAACM,QAAQ,IAAIN,IAAI,CAACO,QAAQ,EAAE;UAElE,IAAI,CAACjB,aAAa,CAACmB,GAAG,CAACD,SAAS,CAAC,EAAE;YAC/BnB,YAAY,CAAEqB,aAAa,KAAM;cAC7B,GAAGA,aAAa;cAChB,CAACV,IAAI,CAACM,QAAQ,GAAGN;YACrB,CAAC,CAAC,CAAC;;YAEH;YACAlB,KAAK,CAAC6B,IAAI,CAAC,eAAeX,IAAI,CAACK,IAAI,OAAOL,IAAI,CAACM,QAAQ,kBAAkBN,IAAI,CAACO,QAAQ,EAAE,CAAC;;YAEzF;YACAhB,gBAAgB,CAAEqB,WAAW,IAAK,IAAIpB,GAAG,CAACoB,WAAW,CAAC,CAACC,GAAG,CAACL,SAAS,CAAC,CAAC;UAC1E;QACJ;MACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC5D;IACJ,CAAC;IAEDV,MAAM,CAACqB,OAAO,GAAG,MAAM;MACnBlB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC;IAED,OAAO,MAAM;MACTJ,MAAM,CAACsB,KAAK,CAAC,CAAC;IAClB,CAAC;EACL,CAAC,EAAE,CAACzB,aAAa,CAAC,CAAC;EAEnB,oBACIL,OAAA;IAAA+B,QAAA,eACI/B,OAAA,CAACF,cAAc;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEd,CAAC;AAACjC,EAAA,CA7DID,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AA+DrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}